generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categories {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)

  // Relacion: Una categoria puede estar asociada a muchas transacciones
  // One-to-Many
  transactions transactions[]
}

model goals {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(255)
  totalAmount   Float
  currentAmount Float?
  userId        Int
  isComplete    Boolean  @default(false)
  isFavorite    Boolean? @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt

  // Relacion: Muchos objetivos pueden pertenecer a un usuario
  // Many-to-One
  users         users    @relation(fields: [userId], references: [id], map: "Goals_userId_fkey")

  @@index([userId], map: "Goals_userId_fkey")
}

model transactions {
  id          Int        @id @default(autoincrement())
  description String     @db.VarChar(255)
  amount      Float
  date        DateTime   @default(now())
  userId      Int
  typeId      Int
  categoryId  Int

  // Relacion: Muchas transacciones pueden tener una misma categoria
  // Many-to-One
  categories  categories @relation(fields: [categoryId], references: [id], map: "Transactions_categoryId_fkey")
  
  // Relacion: Muchas transacciones pueden tener un mismo tipo
  // Many-to-One
  types       types      @relation(fields: [typeId], references: [id], map: "Transactions_typeId_fkey")
  
  // Relacion: Muchas transacciones pueden pertenecer a un mismo usuario
  // Many-to-One
  users       users      @relation(fields: [userId], references: [id], map: "Transactions_userId_fkey")


  @@index([categoryId], map: "Transactions_categoryId_fkey")
  @@index([typeId], map: "Transactions_typeId_fkey")
  @@index([userId], map: "Transactions_userId_fkey")
}

model types {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)

  // Relacion: Un tipo puede estar asociado a muchas transacciones
  // One-to-Many
  transactions transactions[]
}

model users {
  id           Int            @id @default(autoincrement())
  first_name   String         @db.VarChar(255)
  last_name    String         @db.VarChar(255)
  email        String         @unique(map: "Users_email_key")
  password     String
  age          Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime

  // Relacion: Un usuario puede tener muchos objetivos
  // One-to-Many
  goals        goals[]
  
  // Relacion: Un usuario puede tener muchas transacciones
  // One-to-Many
  transactions transactions[]
}
